{
  "name": "kickass-api",
  "version": "0.0.3",
  "description": "KAT (Kickass) api wrapper with mirror fallback and advanced search parameters.",
  "main": "index.js",
  "license": "GPL-3.0",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "request": "^2.55.0",
    "q": "2.0.3",
    "URIjs": "^1.15.0"
  },
  "keywords": [
    "kat",
    "kickass",
    "api",
    "torrent",
    "json",
    "search"
  ],
  "readme": "### Kat-api\n\nKAT (Kickass Torrent) api wrapper with mirror fallback and advanced search parameters.\n\n\n#### Simple search\n\n```\nvar kat = require('kat-api');\n\nkat.search('test').then(function (data) {\n        console.log(data);\n    }).catch(function (error) {\n        console.log(error);\n    });\n```\n\n#### Advanced search\n\n```\nkat.search({\n        query: 'Anger Management',\n        category: 'tv',\n        min_seeds: '10',\n        uploader: 'ettv',\n        sort_by: 'seeders',\n        order: 'desc',\n        verified: 1,\n        language: 'en'\n    }).then(function (data) {\n        console.log(data);\n    }).catch(function (error) {\n        console.log(error);\n    });\n```\n\n*Output example:*\n\n##### response:\n```\npage: 2\nresponse_time: 743\nresults: Array[25]\ntotal_pages: 824\ntotal_results: 20578\n```\n\n\n##### results:\n```\n{ 0\n    {\n        category: \"TV\"\n        comments: 16\n        files: 3\n        guid: \"http://kat.cr/anger-management-s02e34-hdtv-xvid-afg-t7861470.html\"\n        hash: \"8427C27F3081F7B05E1F036B851A6847124D73F5\"\n        leechs: 2\n        link: \"http://kat.cr/anger-management-s02e34-hdtv-xvid-afg-t7861470.html\"\n        magnet: \"magnet:?xt=urn:btih:8427C27F3081F7B05E1F036B851A6847124D73F5&dn=anger+management+s02e34+hdtv+xvid+afg&tr=udp%3A%2F%2Ftracker.publicbt.com%2Fannounce&tr=udp%3A%2F%2Fopen.demonii.com%3A1337\"\n        peers: 18\n        pubDate: \"Friday 13 Sep 2013 02:32:42 +0000\"\n        seeds: 16\n        size: 178012276\n        title: \"Anger Management S02E34 HDTV XviD-AFG\"\n        torrentLink: \"http://torcache.net/torrent/8427C27F3081F7B05E1F036B851A6847124D73F5.torrent?title=[kat.cr]anger.management.s02e34.hdtv.xvid.afg\"\n        verified: 1\n        votes: 81\n    }\n}\n```\n\n*Use example:*\n\nWe'll display the magnet link for the most seeded 'Anger Management' episode.\n\n```\nvar kat = require('kat-api');\nkat.search({\n    query: 'Anger Management',\n    sort_by: 'seeders'\n}).then(function (response) {\n    console.log(response.results[0].magnet);\n}).catch(function (error) {\n    console.log('an error occured');\n});\n```\n\n#### Parameters\n\nKAT search requires *at least 1* of the following queries: `query, category, min_seeds, uploader, safety_filter, verified, language, age`\n\nEvery other parameter is optionnal.\n\n--\n\n- `query`: search terms.\n * as shown on the above examples, it can be passed simply as a string: `search('string')` if you don't use any other parameter.\n\n- `category`: possible values: tv|movies|anime|applications|books|games|music|xxx|other   * Subcategories can also be used in the `category` parameter, but I won't list them.\n\n- `min_seeds`: a number, integer. Can be contained in a string.\n * The torrent must be seeded by at least `min_seeds` people.\n\n- `uploader`: a KickassTorrent's username.\n * The torrent was uploaded by `uploader`.\n\n\n- `imdb`: IMDB id - *movies only*\n * You can pass the entire id or just the figures: 'tt2561572' or '2561572'.\n\n- `tvrage`: TVRage id - *tv only*\n\n- `sort_by`: possible values: seeders|leechers|time_add|files_count\n\n- `order`: possible values: asc|desc\n \n- `safety_filter`: 0 or 1. (1=true, 0=false)\n * This option turns off all the pornographic content.\n\n- `verified`: 0 or 1 (1=true, 0=false)\n * The torrent has been identified as 'not fake' by the community\n\n- `language`: langcode or language ID (see below) - *only for Movie or TV*\n * The spoken language. Example: `en` or `2`.\n\n- `age`: possible values: hour|24h|week|month|year\n * The torrent has been uploaded in the last hour,day,week,month,year.\n\n- `page`: integer.\n * KAT uses 25 results max per page, navigate between pages (1 to X)\n\n\n#### Errors\n- Regular HTTP request errors.\n\n- Regular Javascript errors.\n\n- `Missing a mandatory parameter`: you made an error somewhere.\n\n- `No data`: this happens when the server sent back a statusCode > 400 or if the something went wrong with the request, but the server answered.\n\n- `No results`: 0 results found. Catch this error to warn your user there were no results for its request, or to know when you reached last page.\n\n\n#### Languages\n\nAbout the language parameter:\n\n- English: 'en' (id:2)\n- Albanian: 'sq' (id:42)\n- Arabic: 'ar' (id:7)\n- Basque: 'eu' (id:44)\n- Bengali: 'bn' (id:46)\n- Brazilian: 'pt-br' (id:39)\n- Bulgarian: 'bg' (id:37)\n- Cantonese: 'yue' (id:45)\n- Catalan: 'ca' (id:47)\n- Chinese: 'zh' (id:10)\n- Croatian: 'hr' (id:34)\n- Czech: 'cs' (id:32)\n- Danish: 'da' (id:26)\n- Dutch: 'nl' (id:8)\n- Filipino: 'tl' (id:11)\n- Finnish: 'fi' (id:31)\n- French: 'fr' (id:5)\n- German: 'de' (id:4)\n- Greek: 'el' (id:30)\n- Hebrew: 'he' (id:25)\n- Hindi: 'hi' (id:6)\n- Hungarian: 'hu' (id:27)\n- Italian: 'it' (id:3)\n- Japanese: 'ja' (id:15)\n- Kannada: 'kn' (id:49)\n- Korean: 'ko' (id:16)\n- Lithuanian: 'lt' (id:43)\n- Malayalam: 'ml' (id:21)\n- Mandarin: 'cmn' (id:23)\n- Nepali: 'ne' (id:48)\n- Norwegian: 'no' (id:19)\n- Persian: 'fa' (id:33)\n- Polish: 'pl' (id:9)\n- Portuguese: 'pt' (id:17)\n- Punjabi: 'pa' (id:35)\n- Romanian: 'ro' (id:18)\n- Russian: 'ru' (id:12)\n- Serbian: 'sr' (id:28)\n- Slovenian: 'sl' (id:36)\n- Spanish (latin america): '' (id:41) //no langcode, use ID.\n- Spanish: 'es' (id:14)\n- Swedish: 'sv' (id:20)\n- Tamil: 'ta' (id:13)\n- Telugu: 'te' (id:22)\n- Thai: 'th' (id:24)\n- Turkish: 'tr' (id:29)\n- Ukrainian: 'uk' (id:40)\n- Vietnamese: 'vi' (id:38)",
  "readmeFilename": "README.md",
  "_id": "kickass-api@0.0.3",
  "_shasum": "2df359fd2a9f22bccfe0a6365cf901f6729d2604",
  "_from": "kickass-api@*"
}
