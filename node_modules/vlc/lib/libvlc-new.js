var FFI = require('ffi'),
    Struct = require('ref-struct'),
    ref = require('ref');
exports.CONSTANTS = {
    libvlc_meta_t: {
        '0': 'libvlc_meta_Title',
        '1': 'libvlc_meta_Artist',
        '2': 'libvlc_meta_Genre',
        '3': 'libvlc_meta_Copyright',
        '4': 'libvlc_meta_Album',
        '5': 'libvlc_meta_TrackNumber',
        '6': 'libvlc_meta_Description',
        '7': 'libvlc_meta_Rating',
        '8': 'libvlc_meta_Date',
        '9': 'libvlc_meta_Setting',
        '10': 'libvlc_meta_URL',
        '11': 'libvlc_meta_Language',
        '12': 'libvlc_meta_NowPlaying',
        '13': 'libvlc_meta_Publisher',
        '14': 'libvlc_meta_EncodedBy',
        '15': 'libvlc_meta_ArtworkURL',
        '16': 'libvlc_meta_TrackID',
        libvlc_meta_Title: 0,
        libvlc_meta_Artist: 1,
        libvlc_meta_Genre: 2,
        libvlc_meta_Copyright: 3,
        libvlc_meta_Album: 4,
        libvlc_meta_TrackNumber: 5,
        libvlc_meta_Description: 6,
        libvlc_meta_Rating: 7,
        libvlc_meta_Date: 8,
        libvlc_meta_Setting: 9,
        libvlc_meta_URL: 10,
        libvlc_meta_Language: 11,
        libvlc_meta_NowPlaying: 12,
        libvlc_meta_Publisher: 13,
        libvlc_meta_EncodedBy: 14,
        libvlc_meta_ArtworkURL: 15,
        libvlc_meta_TrackID: 16
    },
    libvlc_playback_mode_t: {
        '0': 'libvlc_playback_mode_default',
        '1': 'libvlc_playback_mode_loop',
        '2': 'libvlc_playback_mode_repeat',
        libvlc_playback_mode_default: 0,
        libvlc_playback_mode_loop: 1,
        libvlc_playback_mode_repeat: 2
    }
};
var __va_list_tag = exports.__va_list_tag = Struct([
    ['uint32', 'gp_offset'],
    ['uint32', 'fp_offset'],
    ['pointer', 'overflow_arg_area'],
    ['pointer', 'reg_save_area'], ]);
var __va_list_tagPtr = exports.__va_list_tagPtr = ref.refType(__va_list_tag);
var libvlc_audio_output_t = exports.libvlc_audio_output_t = Struct([
    ['string', 'psz_name'],
    ['string', 'psz_description'],
    ['pointer', 'p_next'], ]);
var libvlc_audio_output_tPtr = exports.libvlc_audio_output_tPtr = ref.refType(libvlc_audio_output_t);
exports.libvlc = new FFI.Library('libvlc', {
    libvlc_errmsg: ['string', []],
    libvlc_clearerr: ['void', []],
    libvlc_vprinterr: ['string', ['string', __va_list_tagPtr]],
    libvlc_printerr: ['string', ['string']],
    libvlc_new: ['pointer', ['int32', 'pointer']],
    libvlc_release: ['void', ['pointer']],
    libvlc_retain: ['void', ['pointer']],
    libvlc_add_intf: ['int32', ['pointer', 'string']],
    libvlc_set_exit_handler: ['void', ['pointer', 'pointer', 'pointer']],
    libvlc_wait: ['void', ['pointer']],
    libvlc_set_user_agent: ['void', ['pointer', 'string', 'string']],
    libvlc_get_version: ['string', []],
    libvlc_get_compiler: ['string', []],
    libvlc_get_changeset: ['string', []],
    libvlc_free: ['void', ['pointer']],
    libvlc_event_attach: ['int32', ['pointer', 'int32', 'pointer', 'pointer']],
    libvlc_event_detach: ['void', ['pointer', 'int32', 'pointer', 'pointer']],
    libvlc_event_type_name: ['string', ['int32']],
    libvlc_get_log_verbosity: ['uint32', ['pointer']],
    libvlc_set_log_verbosity: ['void', ['pointer', 'uint32']],
    libvlc_log_open: ['pointer', ['pointer']],
    libvlc_log_close: ['void', ['pointer']],
    libvlc_log_count: ['uint32', ['pointer']],
    libvlc_log_clear: ['void', ['pointer']],
    libvlc_log_get_iterator: ['pointer', ['pointer']],
    libvlc_log_iterator_free: ['void', ['pointer']],
    libvlc_log_iterator_has_next: ['int32', ['pointer']],
    libvlc_log_iterator_next: [libvlc_log_message_tPtr, ['pointer', libvlc_log_message_tPtr]],
    libvlc_module_description_list_release: ['void', [libvlc_module_description_tPtr]],
    libvlc_audio_filter_list_get: [libvlc_module_description_tPtr, ['pointer']],
    libvlc_video_filter_list_get: [libvlc_module_description_tPtr, ['pointer']],
    libvlc_clock: ['longlong', []],
    libvlc_delay: ['longlong', ['longlong']],
    libvlc_media_new_location: ['pointer', ['pointer', 'string']],
    libvlc_media_new_path: ['pointer', ['pointer', 'string']],
    libvlc_media_new_fd: ['pointer', ['pointer', 'int32']],
    libvlc_media_new_as_node: ['pointer', ['pointer', 'string']],
    libvlc_media_add_option: ['void', ['pointer', 'string']],
    libvlc_media_add_option_flag: ['void', ['pointer', 'string', 'uint32']],
    libvlc_media_retain: ['void', ['pointer']],
    libvlc_media_release: ['void', ['pointer']],
    libvlc_media_get_mrl: ['string', ['pointer']],
    libvlc_media_duplicate: ['pointer', ['pointer']],
    libvlc_media_get_meta: ['string', ['pointer', 'uint32']],
    libvlc_media_set_meta: ['void', ['pointer', 'uint32', 'string']],
    libvlc_media_save_meta: ['int32', ['pointer']],
    libvlc_media_get_state: ['uint32', ['pointer']],
    libvlc_media_get_stats: ['int32', ['pointer', libvlc_media_stats_tPtr]],
    libvlc_media_subitems: ['pointer', ['pointer']],
    libvlc_media_event_manager: ['pointer', ['pointer']],
    libvlc_media_get_duration: ['longlong', ['pointer']],
    libvlc_media_parse: ['void', ['pointer']],
    libvlc_media_parse_async: ['void', ['pointer']],
    libvlc_media_is_parsed: ['int32', ['pointer']],
    libvlc_media_set_user_data: ['void', ['pointer', 'pointer']],
    libvlc_media_get_user_data: ['pointer', ['pointer']],
    libvlc_media_get_tracks_info: ['int32', ['pointer', 'pointer']],
    libvlc_media_player_new: ['pointer', ['pointer']],
    libvlc_media_player_new_from_media: ['pointer', ['pointer']],
    libvlc_media_player_release: ['void', ['pointer']],
    libvlc_media_player_retain: ['void', ['pointer']],
    libvlc_media_player_set_media: ['void', ['pointer', 'pointer']],
    libvlc_media_player_get_media: ['pointer', ['pointer']],
    libvlc_media_player_event_manager: ['pointer', ['pointer']],
    libvlc_media_player_is_playing: ['int32', ['pointer']],
    libvlc_media_player_play: ['int32', ['pointer']],
    libvlc_media_player_set_pause: ['void', ['pointer', 'int32']],
    libvlc_media_player_pause: ['void', ['pointer']],
    libvlc_media_player_stop: ['void', ['pointer']],
    libvlc_video_set_callbacks: ['void', ['pointer', 'pointer', 'pointer', 'pointer', 'pointer']],
    libvlc_video_set_format: ['void', ['pointer', 'string', 'uint32', 'uint32', 'uint32']],
    libvlc_video_set_format_callbacks: ['void', ['pointer', 'pointer', 'pointer']],
    libvlc_media_player_set_nsobject: ['void', ['pointer', 'pointer']],
    libvlc_media_player_get_nsobject: ['pointer', ['pointer']],
    libvlc_media_player_set_agl: ['void', ['pointer', 'uint32']],
    libvlc_media_player_get_agl: ['uint32', ['pointer']],
    libvlc_media_player_set_xwindow: ['void', ['pointer', 'uint32']],
    libvlc_media_player_get_xwindow: ['uint32', ['pointer']],
    libvlc_media_player_set_hwnd: ['void', ['pointer', 'pointer']],
    libvlc_media_player_get_hwnd: ['pointer', ['pointer']],
    libvlc_audio_set_callbacks: ['void', ['pointer', 'pointer', 'pointer', 'pointer', 'pointer', 'pointer', 'pointer']],
    libvlc_audio_set_volume_callback: ['void', ['pointer', 'pointer']],
    libvlc_audio_set_format_callbacks: ['void', ['pointer', 'pointer', 'pointer']],
    libvlc_audio_set_format: ['void', ['pointer', 'string', 'uint32', 'uint32']],
    libvlc_media_player_get_length: ['longlong', ['pointer']],
    libvlc_media_player_get_time: ['longlong', ['pointer']],
    libvlc_media_player_set_time: ['void', ['pointer', 'longlong']],
    libvlc_media_player_get_position: ['float', ['pointer']],
    libvlc_media_player_set_position: ['void', ['pointer', 'float']],
    libvlc_media_player_set_chapter: ['void', ['pointer', 'int32']],
    libvlc_media_player_get_chapter: ['int32', ['pointer']],
    libvlc_media_player_get_chapter_count: ['int32', ['pointer']],
    libvlc_media_player_will_play: ['int32', ['pointer']],
    libvlc_media_player_get_chapter_count_for_title: ['int32', ['pointer', 'int32']],
    libvlc_media_player_set_title: ['void', ['pointer', 'int32']],
    libvlc_media_player_get_title: ['int32', ['pointer']],
    libvlc_media_player_get_title_count: ['int32', ['pointer']],
    libvlc_media_player_previous_chapter: ['void', ['pointer']],
    libvlc_media_player_next_chapter: ['void', ['pointer']],
    libvlc_media_player_get_rate: ['float', ['pointer']],
    libvlc_media_player_set_rate: ['int32', ['pointer', 'float']],
    libvlc_media_player_get_state: ['uint32', ['pointer']],
    libvlc_media_player_get_fps: ['float', ['pointer']],
    libvlc_media_player_has_vout: ['uint32', ['pointer']],
    libvlc_media_player_is_seekable: ['int32', ['pointer']],
    libvlc_media_player_can_pause: ['int32', ['pointer']],
    libvlc_media_player_next_frame: ['void', ['pointer']],
    libvlc_media_player_navigate: ['void', ['pointer', 'uint32']],
    libvlc_track_description_list_release: ['void', [libvlc_track_description_tPtr]],
    libvlc_track_description_release: ['void', [libvlc_track_description_tPtr]],
    libvlc_toggle_fullscreen: ['void', ['pointer']],
    libvlc_set_fullscreen: ['void', ['pointer', 'int32']],
    libvlc_get_fullscreen: ['int32', ['pointer']],
    libvlc_video_set_key_input: ['void', ['pointer', 'uint32']],
    libvlc_video_set_mouse_input: ['void', ['pointer', 'uint32']],
    libvlc_video_get_size: ['int32', ['pointer', 'uint32', 'pointer', 'pointer']],
    libvlc_video_get_height: ['int32', ['pointer']],
    libvlc_video_get_width: ['int32', ['pointer']],
    libvlc_video_get_cursor: ['int32', ['pointer', 'uint32', 'pointer', 'pointer']],
    libvlc_video_get_scale: ['float', ['pointer']],
    libvlc_video_set_scale: ['void', ['pointer', 'float']],
    libvlc_video_get_aspect_ratio: ['string', ['pointer']],
    libvlc_video_set_aspect_ratio: ['void', ['pointer', 'string']],
    libvlc_video_get_spu: ['int32', ['pointer']],
    libvlc_video_get_spu_count: ['int32', ['pointer']],
    libvlc_video_get_spu_description: [libvlc_track_description_tPtr, ['pointer']],
    libvlc_video_set_spu: ['int32', ['pointer', 'uint32']],
    libvlc_video_set_subtitle_file: ['int32', ['pointer', 'string']],
    libvlc_video_get_spu_delay: ['longlong', ['pointer']],
    libvlc_video_set_spu_delay: ['int32', ['pointer', 'longlong']],
    libvlc_video_get_title_description: [libvlc_track_description_tPtr, ['pointer']],
    libvlc_video_get_chapter_description: [libvlc_track_description_tPtr, ['pointer', 'int32']],
    libvlc_video_get_crop_geometry: ['string', ['pointer']],
    libvlc_video_set_crop_geometry: ['void', ['pointer', 'string']],
    libvlc_video_get_teletext: ['int32', ['pointer']],
    libvlc_video_set_teletext: ['void', ['pointer', 'int32']],
    libvlc_toggle_teletext: ['void', ['pointer']],
    libvlc_video_get_track_count: ['int32', ['pointer']],
    libvlc_video_get_track_description: [libvlc_track_description_tPtr, ['pointer']],
    libvlc_video_get_track: ['int32', ['pointer']],
    libvlc_video_set_track: ['int32', ['pointer', 'int32']],
    libvlc_video_take_snapshot: ['int32', ['pointer', 'uint32', 'string', 'uint32', 'uint32']],
    libvlc_video_set_deinterlace: ['void', ['pointer', 'string']],
    libvlc_video_get_marquee_int: ['int32', ['pointer', 'uint32']],
    libvlc_video_get_marquee_string: ['string', ['pointer', 'uint32']],
    libvlc_video_set_marquee_int: ['void', ['pointer', 'uint32', 'int32']],
    libvlc_video_set_marquee_string: ['void', ['pointer', 'uint32', 'string']],
    libvlc_video_get_logo_int: ['int32', ['pointer', 'uint32']],
    libvlc_video_set_logo_int: ['void', ['pointer', 'uint32', 'int32']],
    libvlc_video_set_logo_string: ['void', ['pointer', 'uint32', 'string']],
    libvlc_video_get_adjust_int: ['int32', ['pointer', 'uint32']],
    libvlc_video_set_adjust_int: ['void', ['pointer', 'uint32', 'int32']],
    libvlc_video_get_adjust_float: ['float', ['pointer', 'uint32']],
    libvlc_video_set_adjust_float: ['void', ['pointer', 'uint32', 'float']],
    libvlc_audio_output_list_get: [libvlc_audio_output_tPtr, ['pointer']],
    libvlc_audio_output_list_release: ['void', [libvlc_audio_output_tPtr]],
    libvlc_audio_output_set: ['int32', ['pointer', 'string']],
    libvlc_audio_output_device_count: ['int32', ['pointer', 'string']],
    libvlc_audio_output_device_longname: ['string', ['pointer', 'string', 'int32']],
    libvlc_audio_output_device_id: ['string', ['pointer', 'string', 'int32']],
    libvlc_audio_output_device_set: ['void', ['pointer', 'string', 'string']],
    libvlc_audio_output_get_device_type: ['int32', ['pointer']],
    libvlc_audio_output_set_device_type: ['void', ['pointer', 'int32']],
    libvlc_audio_toggle_mute: ['void', ['pointer']],
    libvlc_audio_get_mute: ['int32', ['pointer']],
    libvlc_audio_set_mute: ['void', ['pointer', 'int32']],
    libvlc_audio_get_volume: ['int32', ['pointer']],
    libvlc_audio_set_volume: ['int32', ['pointer', 'int32']],
    libvlc_audio_get_track_count: ['int32', ['pointer']],
    libvlc_audio_get_track_description: [libvlc_track_description_tPtr, ['pointer']],
    libvlc_audio_get_track: ['int32', ['pointer']],
    libvlc_audio_set_track: ['int32', ['pointer', 'int32']],
    libvlc_audio_get_channel: ['int32', ['pointer']],
    libvlc_audio_set_channel: ['int32', ['pointer', 'int32']],
    libvlc_audio_get_delay: ['longlong', ['pointer']],
    libvlc_audio_set_delay: ['int32', ['pointer', 'longlong']],
    libvlc_media_list_new: ['pointer', ['pointer']],
    libvlc_media_list_release: ['void', ['pointer']],
    libvlc_media_list_retain: ['void', ['pointer']],
    libvlc_media_list_add_file_content: ['int32', ['pointer', 'string']],
    libvlc_media_list_set_media: ['void', ['pointer', 'pointer']],
    libvlc_media_list_media: ['pointer', ['pointer']],
    libvlc_media_list_add_media: ['int32', ['pointer', 'pointer']],
    libvlc_media_list_insert_media: ['int32', ['pointer', 'pointer', 'int32']],
    libvlc_media_list_remove_index: ['int32', ['pointer', 'int32']],
    libvlc_media_list_count: ['int32', ['pointer']],
    libvlc_media_list_item_at_index: ['pointer', ['pointer', 'int32']],
    libvlc_media_list_index_of_item: ['int32', ['pointer', 'pointer']],
    libvlc_media_list_is_readonly: ['int32', ['pointer']],
    libvlc_media_list_lock: ['void', ['pointer']],
    libvlc_media_list_unlock: ['void', ['pointer']],
    libvlc_media_list_event_manager: ['pointer', ['pointer']],
    libvlc_media_list_player_new: ['pointer', ['pointer']],
    libvlc_media_list_player_release: ['void', ['pointer']],
    libvlc_media_list_player_retain: ['void', ['pointer']],
    libvlc_media_list_player_event_manager: ['pointer', ['pointer']],
    libvlc_media_list_player_set_media_player: ['void', ['pointer', 'pointer']],
    libvlc_media_list_player_set_media_list: ['void', ['pointer', 'pointer']],
    libvlc_media_list_player_play: ['void', ['pointer']],
    libvlc_media_list_player_pause: ['void', ['pointer']],
    libvlc_media_list_player_is_playing: ['int32', ['pointer']],
    libvlc_media_list_player_get_state: ['uint32', ['pointer']],
    libvlc_media_list_player_play_item_at_index: ['int32', ['pointer', 'int32']],
    libvlc_media_list_player_play_item: ['int32', ['pointer', 'pointer']],
    libvlc_media_list_player_stop: ['void', ['pointer']],
    libvlc_media_list_player_next: ['int32', ['pointer']],
    libvlc_media_list_player_previous: ['int32', ['pointer']],
    libvlc_media_list_player_set_playback_mode: ['void', ['pointer', 'uint32']],
    libvlc_media_library_new: ['pointer', ['pointer']],
    libvlc_media_library_release: ['void', ['pointer']],
    libvlc_media_library_retain: ['void', ['pointer']],
    libvlc_media_library_load: ['int32', ['pointer']],
    libvlc_media_library_media_list: ['pointer', ['pointer']],
    libvlc_media_discoverer_new_from_name: ['pointer', ['pointer', 'string']],
    libvlc_media_discoverer_release: ['void', ['pointer']],
    libvlc_media_discoverer_localized_name: ['string', ['pointer']],
    libvlc_media_discoverer_media_list: ['pointer', ['pointer']],
    libvlc_media_discoverer_event_manager: ['pointer', ['pointer']],
    libvlc_media_discoverer_is_running: ['int32', ['pointer']],
    libvlc_vlm_release: ['void', ['pointer']],
    libvlc_vlm_add_broadcast: ['int32', ['pointer', 'string', 'string', 'string', 'int32', 'pointer', 'int32', 'int32']],
    libvlc_vlm_add_vod: ['int32', ['pointer', 'string', 'string', 'int32', 'pointer', 'int32', 'string']],
    libvlc_vlm_del_media: ['int32', ['pointer', 'string']],
    libvlc_vlm_set_enabled: ['int32', ['pointer', 'string', 'int32']],
    libvlc_vlm_set_output: ['int32', ['pointer', 'string', 'string']],
    libvlc_vlm_set_input: ['int32', ['pointer', 'string', 'string']],
    libvlc_vlm_add_input: ['int32', ['pointer', 'string', 'string']],
    libvlc_vlm_set_loop: ['int32', ['pointer', 'string', 'int32']],
    libvlc_vlm_set_mux: ['int32', ['pointer', 'string', 'string']],
    libvlc_vlm_change_media: ['int32', ['pointer', 'string', 'string', 'string', 'int32', 'pointer', 'int32', 'int32']],
    libvlc_vlm_play_media: ['int32', ['pointer', 'string']],
    libvlc_vlm_stop_media: ['int32', ['pointer', 'string']],
    libvlc_vlm_pause_media: ['int32', ['pointer', 'string']],
    libvlc_vlm_seek_media: ['int32', ['pointer', 'string', 'float']],
    libvlc_vlm_show_media: ['string', ['pointer', 'string']],
    libvlc_vlm_get_media_instance_position: ['float', ['pointer', 'string', 'int32']],
    libvlc_vlm_get_media_instance_time: ['int32', ['pointer', 'string', 'int32']],
    libvlc_vlm_get_media_instance_length: ['int32', ['pointer', 'string', 'int32']],
    libvlc_vlm_get_media_instance_rate: ['int32', ['pointer', 'string', 'int32']],
    libvlc_vlm_get_event_manager: ['pointer', ['pointer']],
    libvlc_playlist_play: ['void', ['pointer', 'int32', 'int32', 'pointer']],
});
